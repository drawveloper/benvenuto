(function() {
  var benchmark, coffeecup, coffeecup_compiled_template, coffeecup_optimized_template, coffeecup_template, data, log;

  coffeecup = require('./src/coffeecup');

  log = console.log;

  data = {
    title: 'test',
    inspired: false,
    users: [
      {
        email: 'house@gmail.com',
        name: 'house'
      }, {
        email: 'cuddy@gmail.com',
        name: 'cuddy'
      }, {
        email: 'wilson@gmail.com',
        name: 'wilson'
      }
    ]
  };

  coffeecup_template = function() {
    doctype(5);
    return html({
      lang: 'en'
    }, function() {
      head(function() {
        meta({
          charset: 'utf-8'
        });
        title(this.title);
        return style('body {font-family: "sans-serif"}\nsection, header {display: block}');
      });
      return body(function() {
        return section(function() {
          header(function() {
            return h1(this.title);
          });
          if (this.inspired) {
            p('Create a witty example');
          } else {
            p('Go meta');
          }
          return ul(function() {
            var user, _i, _len, _ref, _results;
            _ref = this.users;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              user = _ref[_i];
              li(user.name);
              _results.push(li(function() {
                return a({
                  href: "mailto:" + user.email
                }, function() {
                  return user.email;
                });
              }));
            }
            return _results;
          });
        });
      });
    });
  };

  coffeecup_compiled_template = coffeecup.compile(coffeecup_template);

  coffeecup_optimized_template = coffeecup.compile(coffeecup_template, {
    optimize: true
  });

  benchmark = function(title, code) {
    var i, start, _i;
    start = new Date;
    for (i = _i = 1; _i <= 100000; i = ++_i) {
      code();
    }
    return log("" + title + ": " + (new Date - start) + " ms");
  };

  benchmark('coffeecup (precompiled)', function() {
    return coffeecup_compiled_template(data);
  });

  benchmark('coffeecup (precompiled, optimized)', function() {
    return coffeecup_optimized_template(data);
  });

}).call(this);
